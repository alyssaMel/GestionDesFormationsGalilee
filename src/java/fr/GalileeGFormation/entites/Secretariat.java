package fr.GalileeGFormation.entites;
// Generated 9 mars 2016 21:41:37 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Secretariat generated by hbm2java
 */
@Entity
@Table(name="secretariat"
    ,catalog="formation_db"
)
public class Secretariat  implements java.io.Serializable {


     private Integer secretariatId;
     private String campus;
     private String batiment;
     private String niveau;
     private String salle;
     private String telephone;
     private String mail;
     private Set<Composante> composantes = new HashSet<Composante>(0);
     private Set<Formation> formations = new HashSet<Formation>(0);
     private Set<SuperFormation> superFormations = new HashSet<SuperFormation>(0);
     private Set<Departement> departements = new HashSet<Departement>(0);
     private Set<Universite> universites = new HashSet<Universite>(0);

    public Secretariat() {
    }

    public Secretariat(String campus, String batiment, String niveau, String salle, String telephone, String mail) {
        this.campus = campus;
        this.batiment = batiment;
        this.niveau = niveau;
        this.salle = salle;
        this.telephone = telephone;
        this.mail = mail;
    }

    public Secretariat(String campus, String batiment, String niveau, String salle, String telephone, String mail, Set<Composante> composantes, Set<Formation> formations, Set<SuperFormation> superFormations, Set<Departement> departements, Set<Universite> universites) {
       this.campus = campus;
       this.batiment = batiment;
       this.niveau = niveau;
       this.salle = salle;
       this.telephone = telephone;
       this.mail = mail;
       this.composantes = composantes;
       this.formations = formations;
       this.superFormations = superFormations;
       this.departements = departements;
       this.universites = universites;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="secretariatId", unique=true, nullable=false)
    public Integer getSecretariatId() {
        return this.secretariatId;
    }
    
    public void setSecretariatId(Integer secretariatId) {
        this.secretariatId = secretariatId;
    }

    
    @Column(name="campus", length=45)
    public String getCampus() {
        return this.campus;
    }
    
    public void setCampus(String campus) {
        this.campus = campus;
    }

    
    @Column(name="batiment", length=30)
    public String getBatiment() {
        return this.batiment;
    }
    
    public void setBatiment(String batiment) {
        this.batiment = batiment;
    }

    
    @Column(name="niveau", length=20)
    public String getNiveau() {
        return this.niveau;
    }
    
    public void setNiveau(String niveau) {
        this.niveau = niveau;
    }

    
    @Column(name="salle", length=20)
    public String getSalle() {
        return this.salle;
    }
    
    public void setSalle(String salle) {
        this.salle = salle;
    }

    
    @Column(name="telephone", length=45)
    public String getTelephone() {
        return this.telephone;
    }
    
    public void setTelephone(String telephone) {
        this.telephone = telephone;
    }

    
    @Column(name="mail", length=70)
    public String getMail() {
        return this.mail;
    }
    
    public void setMail(String mail) {
        this.mail = mail;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="secretariat")
    public Set<Composante> getComposantes() {
        return this.composantes;
    }
    
    public void setComposantes(Set<Composante> composantes) {
        this.composantes = composantes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="secretariat")
    public Set<Formation> getFormations() {
        return this.formations;
    }
    
    public void setFormations(Set<Formation> formations) {
        this.formations = formations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="secretariat")
    public Set<SuperFormation> getSuperFormations() {
        return this.superFormations;
    }
    
    public void setSuperFormations(Set<SuperFormation> superFormations) {
        this.superFormations = superFormations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="secretariat")
    public Set<Departement> getDepartements() {
        return this.departements;
    }
    
    public void setDepartements(Set<Departement> departements) {
        this.departements = departements;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="secretariat")
    public Set<Universite> getUniversites() {
        return this.universites;
    }
    
    public void setUniversites(Set<Universite> universites) {
        this.universites = universites;
    }

    @Override
    public String toString() {
        return "Secretariat{" + "campus=" + campus + ", batiment=" + batiment + ", niveau=" + niveau + ", salle=" + salle + ", telephone=" + telephone + ", mail=" + mail + '}';
    }

        @Override
    public int hashCode() {
        return (secretariatId != null)
            ? (this.getClass().hashCode() + secretariatId.hashCode())
            : super.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
       return (obj instanceof Secretariat) && (secretariatId != null)
            ? secretariatId.equals(((Secretariat) obj).secretariatId)
            : (obj == this);
    }
    

    

}


