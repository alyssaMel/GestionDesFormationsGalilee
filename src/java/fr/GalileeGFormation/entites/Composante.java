package fr.GalileeGFormation.entites;
// Generated 9 mars 2016 21:41:37 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Composante generated by hbm2java
 */
@Entity
@Table(name="composante"
    ,catalog="formation_db"
)
public class Composante  implements java.io.Serializable {


     private Integer composanteId;
     private Secretariat secretariat;
     private Users users;
     private String libelle;
     private String abreviation;
     private String description;
     private byte[] document;
     private Set<Departement> departements = new HashSet<Departement>(0);
     private Set<Universite> universites = new HashSet<Universite>(0);

    public Composante() {
    }

    public Composante(String libelle, String abreviation, String description) {
        this.libelle = libelle;
        this.abreviation = abreviation;
        this.description = description;
    }

    public Composante(Secretariat secretariat, Users users) {
        this.secretariat = secretariat;
        this.users = users;
    }
    public Composante(Secretariat secretariat, Users users, String libelle, String abreviation, String description, byte[] document, Set<Departement> departements, Set<Universite> universites) {
       this.secretariat = secretariat;
       this.users = users;
       this.libelle = libelle;
       this.abreviation = abreviation;
       this.description = description;
       this.document = document;
       this.departements = departements;
       this.universites = universites;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="composanteId", unique=true, nullable=false)
    public Integer getComposanteId() {
        return this.composanteId;
    }
    
    public void setComposanteId(Integer composanteId) {
        this.composanteId = composanteId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="secretariatId", nullable=false)
    public Secretariat getSecretariat() {
        return this.secretariat;
    }
    
    public void setSecretariat(Secretariat secretariat) {
        this.secretariat = secretariat;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="username", nullable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

    
    @Column(name="libelle", length=150)
    public String getLibelle() {
        return this.libelle;
    }
    
    public void setLibelle(String libelle) {
        this.libelle = libelle;
    }

    
    @Column(name="abreviation", length=20)
    public String getAbreviation() {
        return this.abreviation;
    }
    
    public void setAbreviation(String abreviation) {
        this.abreviation = abreviation;
    }

    
    @Column(name="description", length=16777215)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="document")
    public byte[] getDocument() {
        return this.document;
    }
    
    public void setDocument(byte[] document) {
        this.document = document;
    }

@ManyToMany(fetch=FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinTable(name="composante_departement", catalog="formation_db", joinColumns = { 
        @JoinColumn(name="composanteId", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="departementId", nullable=false, updatable=false) })
    public Set<Departement> getDepartements() {
        return this.departements;
    }
    
    public void setDepartements(Set<Departement> departements) {
        this.departements = departements;
    }

@ManyToMany(fetch=FetchType.LAZY, mappedBy="composantes")
    public Set<Universite> getUniversites() {
        return this.universites;
    }
    
    public void setUniversites(Set<Universite> universites) {
        this.universites = universites;
    }

    @Override
    public String toString() {
        return "Composante{" + "libelle=" + libelle + '}';
    }

    
}


